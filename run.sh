#!/bin/bash
echo "===== INICIANDO ENTORNO DE DESARROLLO AMAZONT ====="

# Funci√≥n para mostrar errores sin detener el script
show_error() {
  echo "‚ö†Ô∏è $1"
}

# Verificar si Docker est√° instalado
if ! command -v docker &> /dev/null; then
    show_error "Docker no est√° instalado o no est√° en el PATH. Por favor, instala Docker Desktop."
else
    echo "‚úÖ Docker encontrado"
fi

# Verificar si docker-compose est√° instalado
if ! command -v docker-compose &> /dev/null; then
    show_error "Docker Compose no est√° instalado o no est√° en el PATH. Docker Compose viene incluido con Docker Desktop."
else
    echo "‚úÖ Docker Compose encontrado"
fi

# Verificar si los puertos necesarios est√°n disponibles
PORTS_TO_CHECK=(4200 8000 8080)
PORTS_IN_USE=""
for port in "${PORTS_TO_CHECK[@]}"; do
    if netstat -ano | findstr ":$port" > /dev/null; then
        case $port in
            4200)
                PORTS_IN_USE="$PORTS_IN_USE\n - Puerto 4200 (frontend Angular)"
                ;;
            8000)
                PORTS_IN_USE="$PORTS_IN_USE\n - Puerto 8000 (backend Laravel)"
                ;;
            8080)
                PORTS_IN_USE="$PORTS_IN_USE\n - Puerto 8080 (phpMyAdmin)"
                ;;
        esac
    fi
done

if [ ! -z "$PORTS_IN_USE" ]; then
    show_error "Los siguientes puertos ya est√°n en uso:$PORTS_IN_USE"
    show_error "Los servicios pueden no iniciar correctamente. Considera cerrar las aplicaciones que usan estos puertos."
else
    echo "‚úÖ Todos los puertos necesarios est√°n disponibles"
fi

echo "‚è≥ Iniciando contenedores Docker..."
if ! docker-compose up -d; then
    show_error "No se pudieron iniciar los contenedores Docker."
    show_error "Posibles causas:"
    show_error " - Docker Desktop no est√° en ejecuci√≥n"
    show_error " - Hay un problema con el archivo docker-compose.yml"
    show_error " - Conflicto con los puertos o vol√∫menes"
else
    echo "‚úÖ Comando docker-compose ejecutado"
fi

# Verificar que los contenedores est√©n en funcionamiento
CONTAINERS=$(docker-compose ps -q)
if [ -z "$CONTAINERS" ]; then
    show_error "No se han iniciado contenedores Docker."
    show_error "Por favor, verifica tu archivo docker-compose.yml y los logs de Docker."
else
    # Contar contenedores en estado running
    RUNNING_CONTAINERS=$(docker-compose ps | grep -c "Up")
    EXPECTED_CONTAINERS=$(docker-compose config --services | wc -l)

    if [ "$RUNNING_CONTAINERS" -lt "$EXPECTED_CONTAINERS" ]; then
        show_error "No todos los contenedores est√°n en ejecuci√≥n."
        show_error "Contenedores iniciados: $RUNNING_CONTAINERS de $EXPECTED_CONTAINERS"
        show_error "Ejecuta 'docker-compose ps' para ver el estado de los contenedores."
        show_error "Ejecuta 'docker-compose logs' para ver los logs de error."
    else
        echo "‚úÖ Todos los contenedores est√°n en ejecuci√≥n ($RUNNING_CONTAINERS de $EXPECTED_CONTAINERS)"
    fi
fi

echo ""
echo "üì± FRONTEND: http://localhost:4200"
echo "‚öôÔ∏è BACKEND API: http://localhost:8000"
echo "üóÑÔ∏è PHPMYADMIN: http://localhost:8080 (usuario: root, contrase√±a: root)"
echo ""
echo "Credenciales de administrador:"
echo "Email: admin@admin.com"
echo "Contrase√±a: admin"
echo ""
echo "Para detener los contenedores usa: docker-compose down"